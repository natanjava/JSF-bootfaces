<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:b="http://bootsfaces.net/ui">

<h:head>
	<title>Pedidos</title>
</h:head>

<h:body>

	<ui:include src="/menu.xhtml" />
	<div style="margin-left: 5%; margin-right: 5%; margin-bottom: 3%">

		<b:messages id="msg-launch" />
		
		<br/>
		<div style="width: 500px; text-align: justify">
		<h4>Registration of new Launch. Only Mangager can insert new LAunches in the System.</h4> 
		On this page it is possible to register releases, if the logged-in user has this privilege, but
		every User can see the releases registered until the current date.
		
		To see the complete list of all the system's releases, visit the page <a href="rellancamento.jsf">launch report page</a>.
		</div>
	
		<h:form id="formLancamento" style="margin-top:2%; " rendered="#{pessoaBean.permiteAcesso('MANAGER')}">
			<h:panelGrid columns="2" style="margin-bottom:1%;">
				<f:facet name="header">
					<h:outputText value="Launch Formular" />
				</f:facet>
	
				<h:outputLabel value="ID" />
				<b:inputText value="#{lancamentoBean.lancamento.id}" readonly="true" />
	
				<h:outputLabel value="Description" />
				<b:inputText id="descricaoTextarea"  
								value="#{lancamentoBean.lancamento.descricao}"
								required="true" requiredMessage="Descripton required"  />
	
			    <h:outputLabel value="Supplier" />
			    <b:selectOneMenu value="#{lancamentoBean.lancamento.empresaOrigem}">
			        <f:selectItems value="#{lancamentoBean.companies}" var="company" itemValue="#{company}" itemLabel="#{company.name}" />
			    </b:selectOneMenu>
	
				<h:outputLabel value="Date of order" />
				<b:datepicker locale="en" readonly="true" disabled="true"
					value="#{lancamentoBean.lancamento.dataIni}"  style="width:180px;"/>
	
				<h:outputLabel value="Date of delivery" />
				<b:datepicker locale="en"
					value="#{lancamentoBean.lancamento.dataFim}" required="true"
					requiredMessage="Date of delyvery required" style="width:180px;"/>
				
				<h:outputLabel value="Cost" />
				<b:inputText value="#{lancamentoBean.lancamento.coast}"
					required="true" requiredMessage="Coast required"  onkeyup="handleCost(event)" maxlength="6">
					  <f:facet name="prepend">
				        <h:outputText value="$" />
				      </f:facet>
				</b:inputText>
	
				<!-- empty tag to make space 
				<h:outputLabel />
				-->
	
			</h:panelGrid>
	
			<h:panelGroup style="margin-left: 10%; margin-top: 6%;">
				<h:commandButton value="Save Launch" action="#{lancamentoBean.salvar}"
					image="/resources/img/salvar.png" title="Save Launch" />

				<h:commandButton value="Clean Form" action="#{lancamentoBean.novo}" id="btnClean"
					image="/resources/img/limpar.png" title="Clean Form"  >
					<f:ajax execute="btnClean" render="@form" />
				</h:commandButton>
			</h:panelGroup>
		</h:form>
	
		<br /><br /><br />
		<div style="text-align: center" >
			<h4>Launches already saved in the System.</h4> 
		</div>
		<h:form >
			<b:dataTable 
				value="#{lancamentoBean.lancamentos}" 
				var="lanc"
				border="1" cellpadding="20"
				paginated="true"
				searching="true">
	
				<b:dataTableColumn value="#{lanc.id}" label="ID" />	
	
				<b:dataTableColumn value="#{lanc.descricao}" label="Description"  />	
				
				<h:column>
					<f:facet name="header">Date of order</f:facet>
					<h:outputLabel value="#{lanc.dataIni}" >
						  <f:convertDateTime pattern="dd-MM-yyyy" />
					</h:outputLabel>
				</h:column>
				
				<h:column>
					<f:facet name="header">Service delivery</f:facet>
					<h:outputLabel value="#{lanc.dataFim}" >
						  <f:convertDateTime pattern="dd-MM-yyyy" />
					</h:outputLabel>
				</h:column>
				
				<b:dataTableColumn value="#{lanc.coast}" label="Coast" />	
				
				<b:dataTableColumn  label="Status" >
					<h:outputLabel value="#{lanc.status}" rendered="#{lanc.status != 'REJECTED'}" />
					<h:button value="#{lanc.status}" rendered="#{lanc.status == 'REJECTED'}" 
							  onclick="alert('Reason for Rejection:\n  #{lanc.reason}')" />
				</b:dataTableColumn>
				
				<h:column>
				    <f:facet name="header">Update</f:facet>
					<h:commandLink title="Edit Launch" rendered="#{lanc.status == 'under review'}">
			            <h:graphicImage value="/resources/img/editar.png" />
			            <f:setPropertyActionListener value="#{lanc}" target="#{lancamentoBean.lancamento}" />
			        </h:commandLink>
			        <h:outputText value="Not Editable" rendered="#{lanc.status != 'under review'}" />
				</h:column>
	
				<h:column>
					<f:facet name="header">Remove</f:facet>
					<h:commandLink title="Remove Launch" action="#{lancamentoBean.remover}" rendered="#{lanc.status == 'under review'}" 
						onclick="return confirm('Are you sure you want to delete?');">
						<h:graphicImage value="/resources/img/excluir.png" />
						<f:setPropertyActionListener value="#{lanc}"
							target="#{lancamentoBean.lancamento}" />
					</h:commandLink>
					<h:outputText value="Not excludable" rendered="#{lanc.status != 'under review'}" />
				</h:column>
	
			</b:dataTable>
	
		</h:form>
	</div>


<script type="text/javascript">
	// TextArea, limit 250 cacarters, no more used but soon will be implentated
    function limitarCaracteres() {
        var textarea = document.getElementById('formLancamento:descricaoTextarea'); 
        var limite = 255; // Defina o limite de caracteres desejado

        if (textarea.value.length > limite) {
            textarea.value = textarea.value.substring(0, limite); 
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        var textarea = document.getElementById('formLancamento:descricaoTextarea'); 
        textarea.addEventListener('input', limitarCaracteres); 
    });
    
	/* Cost Mask*/
	const handleCost = (event) => {
	  let input = event.target;
	  input.value = formatCurrency(input.value);
	};
	
	const formatCurrency = (value) => {
	  // Remove qualquer caractere não numérico
	  value = value.replace(/[^\d.]/g, '');
	
	  // Divide o valor em parte inteira e parte decimal
	  const parts = value.split('.');
	  let integerPart = parts[0] || '';
	  let decimalPart = parts[1] || '';
	
	  // Limita a parte decimal a dois dígitos
	  if (decimalPart.length > 2) {
	    decimalPart = decimalPart.slice(0, 2);
	  }
	
	  // Formata o valor de volta
	  value = integerPart + (decimalPart ? '.' + decimalPart : '');
	
	  return value;
	};
	/* ------ */
    
    

</script>
</h:body>

</html>